@using Biblioteca.Core.Models
@model List<PrestitiViewModel>
<h2>Tutti i libri in prestito ora</h2>

<table>
    <tr>
        <th>ID</th>
        <th>Nome</th>
        <th>Cognome</th>
        <th>Titolo</th>
        <th>Data Prestito</th>
        <th>Tempo mancante</th>
    </tr>
    @foreach (var p in Model)
    {
        
        var expireDate = p.DataPrestito.AddDays(90);
        <tr>
            <td>@p.IdPrestito</td>
            <td>@p.NomeUtente</td>
            <td>@p.CognomeUtente</td>
            <td>@p.TitoloLibro</td>           
            <td>@p.DataPrestito.ToString("yyyy-MM-dd HH:mm:ss")</td>
            <td class="tempo-mancante" data-expire="@expireDate.ToString("yyyy-MM-ddTHH:mm:ss")"></td>
        </tr>
    }
</table>
<script>
    function aggiornaCountdown() {
        const elementi = document.querySelectorAll('.tempo-mancante');
        const now = new Date();

        elementi.forEach(el => {
            const expireString = el.dataset.expire;
            const expireDate = new Date(expireString);
            const diff = expireDate - now;

            if (diff <= 0) {
                el.innerText = "Scaduto";
                return;
            }

            const giorni = Math.floor(diff / (1000 * 60 * 60 * 24));
            const ore = Math.floor((diff / (1000 * 60 * 60)) % 24);
            const minuti = Math.floor((diff / (1000 * 60)) % 60);
            const secondi = Math.floor((diff / 1000) % 60);
            if(giorni<10){
                el.classList.add("text-danger");
            }
            else{
                el.classList.remove("text-danger");
            }
            el.innerText = `${giorni}g ${ore}h ${minuti}m ${secondi}s`;
        });
    }

    // Avvio iniziale
    aggiornaCountdown();

    // Aggiorna ogni secondo
    setInterval(aggiornaCountdown, 1000);
</script>

<style>
    body{
        transition: all 0.3s;
    }
    table, th, td {
        border-radius: 5px;
        
    }
    .text-danger{
        color: #f62525 !important; 
    }
    table {
        border-collapse: collapse;
        width: 100%;
    }
    th, td {
        padding: 15px;
        border-top: 1px solid #C5B0CD;
        border-bottom: 1px solid #C5B0CD;
    }
    th {
        background-color: #415E72;
        color: white;
    }
    tr:not(:first-child):hover {
        transition: all 0.3s;
        background-color: #C5B0CD;
    }
</style>
